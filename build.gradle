plugins {
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

subprojects {
    apply plugin: "java"

    java.toolchain.languageVersion = JavaLanguageVersion.of(8)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE.md")) {
            rename { "LICENSE_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }
    sourcesJar {
        from(rootProject.file("LICENSE.md")) {
            rename { "LICENSE_${mod_name}" }
        }
    }
    repositories {
        mavenCentral()
        maven {
            name = "Sponge / Mixin"
            url = "https://repo.spongepowered.org/repository/maven-public/"
        }
        maven {
            name = "Team Resourceful"
            url = "https://maven.teamresourceful.com/repository/maven-public/"
        }
        maven {
            name = "Enderman Overhaul"
            url = "https://maven.resourcefulbees.com/repository/alexnijjar/"
        }
    }
    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
    }
    group = "${mod_group}.${mod_id}"
    processResources {
        def expandProps = [
            "mod_version": version,
            "mod_group": mod_group,
            "minecraft_version": minecraft_version,
            "forge_version": forge_version,
            "forge_loader_version_range": forge_loader_version_range,
            "forge_version_range": forge_version_range,
            "minecraft_version_range": minecraft_version_range,
            "fabric_version": fabric_version,
            "fabric_loader_version": fabric_loader_version,
            "minecraft_version_semver": minecraft_version_semver,
            "mod_name": mod_name,
            "mod_author": mod_author,
            "mod_id": mod_id,
            "mod_license": mod_license,
            "mod_description": project.mod_description,
            "neoforge_version": neoforge_version,
            "neoforge_loader_version_range": neoforge_loader_version_range,
            "mod_credits": mod_credits,
            "apotheosis_version_range": apotheosis_version_range,
            "apotheosis_version_semver": apotheosis_version_semver,
        ]
        filesMatching(["pack.mcmeta", "fabric.mod.json", "META-INF/mods.toml", "*.mixins.json"]) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }
    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}
