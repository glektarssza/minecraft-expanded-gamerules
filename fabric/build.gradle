plugins {
    id "java"
    id "idea"
    id "maven-publish"
    id "fabric-loom" version "1.8.7"
}
base {
    archivesName = "${archive_base_name}-fabric-${archive_version_name}"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: "com.google.code.findbugs", name: "jsr305", version: "3.0.2"
    compileOnly project(":common")
    modImplementation group: "tech.alexnijjar.endermanoverhaul", name: "endermanoverhaul-fabric-${enderman_overhaul_minecraft_version}", version: enderman_overhaul_version
    modImplementation group: "software.bernie.geckolib", name: "geckolib-forge-$geckolib_minecraft_version", version: geckolib_version
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        add(sourceSets.main, "${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
